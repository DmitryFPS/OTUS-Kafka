0) Запускаем Kafka
    docker compose up -d
    docker compose ps -a

1) JMX
1.1) ZooKeeper AdminServer
    curl http://localhost:18080/commands
    curl http://localhost:28080/commands/stats
    curl http://localhost:38080/commands/monitor

1.2) ZooKeeper Commands
    echo conf | nc localhost 12181
    echo srvr | nc localhost 22181

1.3) Запуск JConsole
    jconsole
    - Zookeeper: Remote Process: localhost:10020
    - Kafka: Remote Process: localhost:10030

1.4) Нагружаем Kafka
    kafka-topics.sh --create --topic test --bootstrap-server localhost:9092
    kafka-producer-perf-test.sh --topic test --num-records 1000000 --record-size 100 --throughput -1 --producer-props bootstrap.servers=localhost:9092


2) Prometheus + Grafana
2.1) Проверям Kafka exporter
    curl -s localhost:9308/metrics | grep kafka

2.2) Проверяем JMX exporter
    curl -s localhost:17071/metrics | grep jvm
    curl -s localhost:17071/metrics | grep kafka

2.3) Проверяем Prometheus
    Открываем http://localhost:9090
    Prometheus -> Status -> Target
        http://http://localhost:9090/targets
    Prometheus -> Status -> Rules
        http://http://localhost:9090/rules

2.5) Grafana
    Открывыаем http://localhost:3000 (admin/admin)
    Добавляем источник: Connections -> Data sources -> Add data source -> Prometheus -> http://prometheus:9090 -> Save & Test
    Импортируем дашборд: Dashboards -> New -> Import

2.6) Нагружаем Kafka
    docker exec kafka-1 kafka-topics --create --topic test --bootstrap-server kafka-1:19092,kafka-2:19093,kafka-3:19094 --partitions 3 --replication-factor 3
    docker exec kafka-1 kafka-producer-perf-test --topic test --num-records 1000000 --record-size 1024 --throughput -1 --producer-props bootstrap.servers=kafka-1:19092,kafka-2:19093,kafka-3:19094
    docker exec kafka-1 kafka-consumer-perf-test --topic test --bootstrap-server kafka-1:19092,kafka-2:19093,kafka-3:19094 --group cp1 --messages 1000000
    docker exec kafka-1 kafka-console-consumer --topic test --bootstrap-server kafka-1:19092,kafka-2:19093,kafka-3:19094 --group cg1 --from-beginning


3) Останавливаем Kafka
    docker compose stop
    docker container prune -f
    docker volume prune -f
